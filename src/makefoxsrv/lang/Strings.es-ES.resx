<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Lang.AnswerCallbackMsg" xml:space="preserve">
  <value>¡Idioma establecido!</value>
</data>
  <data name="Terms.AgreeButton" xml:space="preserve">
  <value>📝 Entiendo y Acepto</value>
  <!-- The "&amp;" is HTML encoded to "&" for HTML content within XML. It's standard practice in HTML encoding and doesn't need to be translated or changed. -->
</data>
  <data name="Terms.AgreePrompt" xml:space="preserve">
  <value>&lt;b&gt;Haz clic en el botón de abajo para reconocer tu comprensión y acuerdo con estos términos.&lt;/b&gt;</value>
  <!-- The text within "&lt;b&gt;" and "&lt;/b&gt;" is HTML encoded for "<b>" and "</b>" to bold the text, which is preserved in translation. -->
</data>
  <data name="Terms.Message" xml:space="preserve">
  <value>Por favor, revisa y acepta los siguientes requisitos antes de proceder:

&lt;b&gt;Verificación de Edad:&lt;/b&gt; Debes tener al menos 18 años de edad y ser reconocido como un adulto legal en tu jurisdicción.

&lt;b&gt;Directrices de Personajes:&lt;/b&gt; Desalentamos la representación de personajes humanos en contenido maduro. Está explícitamente prohibido crear imágenes de personajes humanos menores de edad en dichos contextos.

&lt;b&gt;Cumplimiento de Derechos de Autor:&lt;/b&gt; Está prohibido crear imágenes utilizando personajes o marcas registradas sin autorización.

&lt;b&gt;Cumplimiento Legal:&lt;/b&gt; Asegúrate de que todo el contenido generado cumpla con las leyes y regulaciones de tu localidad.

El incumplimiento de estas normas puede resultar en advertencias o restricciones de cuenta.</value>
  <!-- The HTML encoded characters like "&lt;b&gt;" and "&lt;/b&gt;" are translated directly, maintaining the structure for bold text. -->
</data>
  <data name="Terms.UserAgreed" xml:space="preserve">
  <value>&lt;b&gt;Has reconocido tu aceptación de estos términos. ¡Gracias!&lt;/b&gt;</value>
</data>
  <data name="Welcome" xml:space="preserve">
  <value>¡Hola! Soy Makefoxbot, emocionado de ayudarte a desatar tu creatividad con imágenes fantásticas de furry, anime o dibujos animados a través de la IA.

&lt;b&gt;Para Empezar:&lt;/b&gt; Antes de sumergirnos, un rápido vistazo a la documentación de /help te preparará con lo básico. ¿Listo para explorar? Vamos a cubrir algunas reglas básicas:

&lt;b&gt;Aspectos Legales:&lt;/b&gt;

&lt;b&gt;Verificación de Edad:&lt;/b&gt; Debes tener al menos 18 años y ser reconocido como un adulto legal en tu jurisdicción.
&lt;b&gt;Directrices de Personajes:&lt;/b&gt; Desalentamos la representación de personajes humanos en contenido maduro, y está explícitamente prohibido crear imágenes de personajes humanos menores de edad en tales contextos.
&lt;b&gt;Cumplimiento de Derechos de Autor:&lt;/b&gt; Utilizar personajes o marcas registradas sin autorización está prohibido.
&lt;b&gt;Cumplimiento Legal:&lt;/b&gt; Todo el contenido debe cumplir con las leyes de EE.UU. y las regulaciones de tu localidad.

&lt;b&gt;Propósito &amp;amp; Uso:&lt;/b&gt;

&lt;b&gt;Para Aprender:&lt;/b&gt; Este bot está destinado a fines de investigación y educativos, ayudando al crecimiento personal y a la exploración creativa.
&lt;b&gt;Descargo de Responsabilidad de Calidad:&lt;/b&gt; La naturaleza impredecible de la IA significa que las salidas a veces pueden ser dañinas, incorrectas o ofensivas. La responsabilidad del uso y distribución del contenido generado recae en ti.
&lt;b&gt;Sin Uso Comercial:&lt;/b&gt; Las obras de arte creadas aquí no están a la venta. Mantengamos nuestras creaciones en el ámbito del uso personal y el disfrute.
&lt;b&gt;Tu Responsabilidad:&lt;/b&gt; Cumplir con estas directrices asegura un entorno seguro y creativo para todos. Ignorarlas podría llevar a advertencias o restricciones en tu cuenta.</value>
  <!-- I translated "&amp;amp;" as "&amp;", keeping the HTML encoding for "&" consistent. In Spanish, the structure and tone are adapted to be natural. -->
</data>
</root>