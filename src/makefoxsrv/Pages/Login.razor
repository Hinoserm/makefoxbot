@page "/login"
@inject NavigationManager Navigation
@inject IHttpContextAccessor HttpContextAccessor
@inject ILogger<Login> Logger

<h3>Login</h3>

<div id="telegram-login-widget"></div>

<script async src="https://telegram.org/js/telegram-widget.js?7" data-telegram-login="@FoxMain.settings.TelegramBotUsername" data-size="large" data-auth-url="@Navigation.ToAbsoluteUri("/api/auth/telegram")" data-request-access="write"></script>

@if (!string.IsNullOrEmpty(LoginError))
{
    <p style="color: red">@LoginError</p>
}

@code {

    private string LoginError;

    protected override async Task OnInitializedAsync()
    {
        var userSession = HttpContextAccessor.HttpContext.Session.GetString("UserSession");

        if (string.IsNullOrEmpty(userSession))
        {
            Logger.LogInformation("No user session found.");
        }
        else
        {
            Logger.LogInformation($"User session found: {userSession}");
            await InvokeAsync(() => Navigation.NavigateTo("/chat"));
        }

        var cookies = HttpContextAccessor.HttpContext.Request.Cookies;
        foreach (var cookie in cookies)
        {
            Logger.LogInformation($"Cookie: {cookie.Key} = {cookie.Value}");
        }
    }
}
