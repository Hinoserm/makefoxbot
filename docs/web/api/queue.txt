--------------------------------------------------------------

GLOBAL PARAMETERS AND BEHAVIOR

  All client-initiated commands may include:

    SessionID: (string, optional)
      If provided, identifies which session is issuing the command.
      If omitted, the server will attempt to locate a session via cookie (e.g. PHPSESSID).
      If no session is found, a new one will be createdâ€”but it will not be logged in.
      Commands requiring login will fail unless the session is authenticated.

    SeqID: (optional)
      An opaque value (string, number, etc.) sent by the client that will be echoed back
      in the response. Useful for matching request/response pairs.

  All responses include:

    Success: (bool)
      True if the command executed successfully. False if an error occurred.

    Error: (string, optional)
      If Success is false, this will contain the reason for failure.

    SeqID: (optional)
      Echoed back if provided in the original request.

--------------------------------------------------------------

Queue:List
  Description:
    Returns a list of queue items for the current user, or for a specific user if admin.
  Expected Parameters:
    Command     : "Queue:List"
    SessionID   : (string, optional)
    PageSize    : (int, optional) - max number of results (default 50)
    Action      : "new" or "old" (optional) - for pagination
    LastImageID : (long, optional) - used with Action
    Filters     : (object, optional) - see below

  Notes:
    If the user is not an admin, results will be forced to their own UID regardless of filters.

  Returns:
    Command    : "Queue:List"
    Success    : true
    QueueItems : array of queue entries, each with fields like:
      ID, UID, Status, Prompt, Model, Width, Height, DateCreated, etc.

  On Error:
    Success : false
    Error   : (string)

--------------------------------------------------------------

Queue:SubscribeUpdates
  Description:
    Subscribes the current websocket session to queue updates matching the provided filters.
  Expected Parameters:
    type    : "Queue:SubscribeUpdates"
    channel : (string) - arbitrary name for this subscription
    payload : {
      Filters: (object) - see filtering section below
    }

  Returns:
    Command : "Queue:SubscribeUpdates"
    Success : true
    Channel : (string) - the same as sent

  Broadcast Message (on match):
    Command : "Queue:StatusUpdate"
    Channel : (string) - your subscription channel
    Payload : (object) - same as a queue item from Queue:List

  Notes:
    Non-admin users only receive updates for their own UID, even if filters say otherwise.

--------------------------------------------------------------

QUEUE FILTERS - HOW TO USE

You can add a "Filters" object to Queue:List or Queue:SubscribeUpdates.
This allows you to narrow down the result set.

Filters look like this:

    "Filters": {
        "Field": value
    }

Types of filters:

1. Exact match:

    "UID": 123

2. List of matches:

    "UID": [123, 456]

3. Negation:

    "Status": [ { "not": "ERROR" } ]

4. Combined:

    "Status": ["FINISHED", { "not": "CANCELLED" }]

5. Range matching:

    "Width": { "lt": 1024 }
    "Height": { "gte": 512 }

Supported range operators:
    lt   = less than
    lte  = less than or equal
    gt   = greater than
    gte  = greater than or equal
    not  = not equal

Supported Filter Fields:
    ID
    UID
    Status
    Model
    Sampler
    Steps
    Seed
    CFGScale
    Prompt
    NegativePrompt
    Width
    Height
    DenoisingStrength
    HiresWidth
    HiresHeight
    HiresSteps
    HiresDenoisingStrength
    HiresEnabled
    HiresUpscaler
    VariationSeed
    VariationStrength
    SelectedImage
    Enhanced
    Complexity

String-contains filters (substring match):
    PromptContains
    NegativePromptContains
    ModelContains
    SamplerContains
    HiresUpscalerContains

Valid Status values:
    PAUSED
    CANCELLED
    PENDING
    PROCESSING
    PROCESSED
    SENDING
    FINISHED
    ERROR

--------------------------------------------------------------

EXAMPLES

Simple queue list:

    {
        "Command": "Queue:List",
        "SessionID": "abc123",
        "PageSize": 10,
        "Filters": {
            "Status": "FINISHED"
        }
    }

List with range and contains:

    {
        "Command": "Queue:List",
        "SessionID": "abc123",
        "Filters": {
            "UID": [1, 2],
            "Status": [ { "not": "ERROR" } ],
            "Width": { "lt": 1024 },
            "PromptContains": "castle"
        }
    }

WebSocket subscription:

    {
        "type": "Queue:SubscribeUpdates",
        "channel": "queue-watch-fox",
        "payload": {
            "Filters": {
                "PromptContains": "fox",
                "Status": ["PENDING", "PROCESSING"]
            }
        }
    }

--------------------------------------------------------------
